<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Upload</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: #111111;
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            color: #e2e2e2;
        }

        .container {
            background-color: #1a1a1a;
            padding: 2.5rem;
            border-radius: 16px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
            width: 90%;
            max-width: 500px;
            border: 1px solid #333333;
        }

        h1 {
            color: #ffffff;
            text-align: center;
            margin-bottom: 2rem;
            font-size: 1.8rem;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        .upload-form {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
        }

        .file-input-container {
            position: relative;
            width: 100%;
            height: 200px;
            border: 2px dashed #666666;
            border-radius: 12px;
            display: flex;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background-color: #222222;
        }

        .file-input-container:hover {
            border-color: #888888;
            background-color: #2a2a2a;
        }

        .file-input-container input[type="file"] {
            position: absolute;
            width: 100%;
            height: 100%;
            opacity: 0;
            cursor: pointer;
        }

        .file-input-label {
            text-align: center;
            color: #cccccc;
        }

        .submit-btn, .copy-url-btn {
            background-color: #333333;
            color: #ffffff;
            padding: 1rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s ease;
            font-weight: 500;
            letter-spacing: 0.5px;
            text-transform: uppercase;
        }

        .submit-btn:hover, .copy-url-btn:hover {
            background-color: #444444;
        }

        .submit-btn:disabled {
            background-color: #222222;
            cursor: not-allowed;
        }

        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: none;
            font-weight: 500;
        }

        .alert-error {
            background-color: #2c1212;
            color: #ffcccc;
            border: 1px solid #662222;
        }

        .alert-success {
            background-color: #122c12;
            color: #ccffcc;
            border: 1px solid #226622;
        }

        #file-name {
            text-align: center;
            margin-top: 1rem;
            color: #999999;
            font-size: 0.9rem;
        }

        .progress-container {
            display: none;
            margin-top: 1rem;
            padding: 1rem;
            background-color: #222222;
            border-radius: 10px;
            border: 1px solid #333333;
        }

        .progress-bar {
            width: 100%;
            height: 12px;
            background-color: #2a2a2a;
            border-radius: 6px;
            overflow: hidden;
        }

        .progress {
            width: 0%;
            height: 100%;
            background-color: #666666;
            transition: width 0.3s ease;
            border-radius: 6px;
        }

        .progress-text {
            text-align: center;
            margin-top: 0.75rem;
            color: #999999;
            font-size: 0.9rem;
            font-weight: 500;
        }

        .file-info {
            font-size: 0.85rem;
            color: #888888;
            margin-top: 0.5rem;
            line-height: 1.5;
        }

        .emoji-icon {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            display: block;
        }

        .copy-url-container {
            display: none;
            margin-top: 1.5rem;
            text-align: center;
        }

        .copy-url-btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>File Upload</h1>
        
        <div id="error-alert" class="alert alert-error"></div>
        <div id="success-alert" class="alert alert-success"></div>

        <form id="upload-form" class="upload-form">
            <div class="file-input-container">
                <input type="file" name="file" id="file" accept=".jpg,.jpeg,.png,.webp" required>
                <div class="file-input-label">
                    <span class="emoji-icon">üìÅ</span>
                    <p>Drag and drop your file here or click to browse</p>
                    <p class="file-info">
                        Supported formats: JPG, JPEG, PNG, WEBP<br>
                        Max size: 20MB
                    </p>
                </div>
            </div>
            <div id="file-name"></div>
            
            <div class="progress-container" id="progress-container">
                <div class="progress-bar">
                    <div class="progress" id="progress"></div>
                </div>
                <div class="progress-text" id="progress-text">0%</div>
            </div>

            <button type="submit" class="submit-btn" id="submit-btn">Upload File</button>
        </form>

        <div class="copy-url-container" id="copy-url-container">
            <button class="copy-url-btn" id="copy-url-btn">
                üìã Copy Image URL
            </button>
        </div>
    </div>

    <script>
        const form = document.getElementById('upload-form');
        const fileInput = document.getElementById('file');
        const fileNameDisplay = document.getElementById('file-name');
        const progressContainer = document.getElementById('progress-container');
        const progress = document.getElementById('progress');
        const progressText = document.getElementById('progress-text');
        const submitBtn = document.getElementById('submit-btn');
        const errorAlert = document.getElementById('error-alert');
        const successAlert = document.getElementById('success-alert');
        const copyUrlContainer = document.getElementById('copy-url-container');
        const copyUrlBtn = document.getElementById('copy-url-btn');

        let lastUploadedUrl = '';

        function showAlert(element, message) {
            element.style.display = 'block';
            element.textContent = message;
            setTimeout(() => {
                element.style.display = 'none';
            }, 5000);
        }

        copyUrlBtn.addEventListener('click', async () => {
            try {
                await navigator.clipboard.writeText(lastUploadedUrl);
                copyUrlBtn.textContent = '‚úì Copied!';
                setTimeout(() => {
                    copyUrlBtn.innerHTML = 'üìã Copy Image URL';
                }, 2000);
            } catch (err) {
                showAlert(errorAlert, 'Failed to copy URL');
            }
        });

        fileInput.addEventListener('change', (e) => {
            const fileName = e.target.files[0]?.name;
            if (fileName) {
                fileNameDisplay.textContent = `Selected file: ${fileName}`;
            } else {
                fileNameDisplay.textContent = '';
            }
        });

        function uploadFileWithProgress(formData) {
            return new Promise((resolve, reject) => {
                const xhr = new XMLHttpRequest();
                
                xhr.upload.onprogress = (e) => {
                    if (e.lengthComputable) {
                        const percentComplete = Math.round((e.loaded / e.total) * 100);
                        progress.style.width = percentComplete + '%';
                        progressText.textContent = percentComplete + '%';
                    }
                };

                xhr.onload = () => {
                    if (xhr.status === 200) {
                        resolve(JSON.parse(xhr.response));
                    } else {
                        reject(new Error(xhr.statusText));
                    }
                };

                xhr.onerror = () => reject(new Error('Network Error'));
                xhr.open('POST', '/upload', true);
                xhr.send(formData);
            });
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();
            const file = fileInput.files[0];

            if (!file) {
                showAlert(errorAlert, 'Please select a file to upload');
                return;
            }

            submitBtn.disabled = true;
            progressContainer.style.display = 'block';
            progress.style.width = '0%';
            progressText.textContent = '0%';
            copyUrlContainer.style.display = 'none';

            try {
                const formData = new FormData();
                formData.append('file', file);

                const result = await uploadFileWithProgress(formData);
                showAlert(successAlert, result.message);
                
                // Store URL and show copy button
                lastUploadedUrl = result.fileUrl;
                copyUrlContainer.style.display = 'block';
                copyUrlBtn.innerHTML = 'üìã Copy Image URL';
                
                form.reset();
                fileNameDisplay.textContent = '';
            } catch (error) {
                showAlert(errorAlert, error.message || 'Upload failed. Please try again.');
            } finally {
                submitBtn.disabled = false;
                setTimeout(() => {
                    progressContainer.style.display = 'none';
                }, 2000);
            }
        });
    </script>
</body>
</html>
